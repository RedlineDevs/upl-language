{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "UPL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.flow.upl",
					"match": "\\b(if|else|loop)\\b"
				},
				{
					"name": "storage.type.upl",
					"match": "\\b(let)\\b"
				},
				{
					"name": "keyword.control.async.upl",
					"match": "\\b(async|await|promise)\\b"
				},
				{
					"name": "keyword.control.exception.upl",
					"match": "\\b(try|catch)\\b"
				},
				{
					"name": "keyword.other.upl",
					"match": "\\b(save|exit)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.upl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.upl",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.upl",
					"match": "//.*$"
				},
				{
					"name": "comment.block.documentation.upl",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.upl",
					"match": "\\b(print)\\b"
				},
				{
					"name": "support.function.math.upl",
					"match": "\\b(add|multiply)\\b"
				},
				{
					"name": "support.function.chaos.upl",
					"match": "\\b(index|access)\\b"
				},
				{
					"name": "support.function.comparison.upl",
					"match": "\\b(equals|lessThan)\\b"
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.upl",
			"match": "\\b[0-9]+\\b"
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.upl",
					"match": "="
				},
				{
					"name": "punctuation.separator.upl",
					"match": "[,;]"
				},
				{
					"name": "punctuation.brackets.round.upl",
					"match": "[\\(\\)]"
				},
				{
					"name": "punctuation.brackets.curly.upl",
					"match": "[\\{\\}]"
				},
				{
					"name": "punctuation.brackets.square.upl",
					"match": "[\\[\\]]"
				},
				{
					"name": "punctuation.separator.key-value.upl",
					"match": ":"
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"name": "constant.language.boolean.upl",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.language.null.upl",
					"match": "\\b(null)\\b"
				}
			]
		},
		"identifiers": {
			"patterns": [{
				"name": "variable.other.readwrite.upl",
				"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
			}]
		}
	},
	"scopeName": "source.upl"
}
